# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'simple_encoder_decoder_page.ui'
#
# Created by: PyQt5 UI code generator 5.10.1
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets
from vigenere import Vigenere
from ceaser import Ceaser
class Ui_encoder_decoder(object):

    flag = "dec"

    def setupUi(self, encoder_decoder):
        encoder_decoder.setObjectName("encoder_decoder")
        encoder_decoder.resize(1134, 363)
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        font.setPointSize(12)
        encoder_decoder.setFont(font)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("images/logo.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        encoder_decoder.setWindowIcon(icon)
        self.text_input_txtarea = QtWidgets.QPlainTextEdit(encoder_decoder)
        self.text_input_txtarea.setGeometry(QtCore.QRect(20, 30, 331, 301))
        self.text_input_txtarea.setObjectName("text_input_txtarea")
        self.text_result_txtarea = QtWidgets.QPlainTextEdit(encoder_decoder)
        self.text_result_txtarea.setGeometry(QtCore.QRect(770, 30, 331, 301))
        self.text_result_txtarea.setObjectName("text_result_txtarea")
        self.enc_dec_grpbox = QtWidgets.QGroupBox(encoder_decoder)
        self.enc_dec_grpbox.setGeometry(QtCore.QRect(370, 30, 381, 301))
        self.enc_dec_grpbox.setStyleSheet("")
        self.enc_dec_grpbox.setTitle("")
        self.enc_dec_grpbox.setObjectName("enc_dec_grpbox")
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.enc_dec_grpbox)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(30, 20, 321, 41))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.radio_grplyt = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.radio_grplyt.setContentsMargins(0, 0, 0, 0)
        self.radio_grplyt.setObjectName("radio_grplyt")
        self.encode_rdbtn = QtWidgets.QRadioButton(self.horizontalLayoutWidget)
        self.encode_rdbtn.setObjectName("encode_rdbtn")
        self.radio_grplyt.addWidget(self.encode_rdbtn)
        self.decode_rdbtn = QtWidgets.QRadioButton(self.horizontalLayoutWidget)
        self.decode_rdbtn.setObjectName("decode_rdbtn")
        self.radio_grplyt.addWidget(self.decode_rdbtn)
        self.cipher_slcbox = QtWidgets.QComboBox(self.enc_dec_grpbox)
        self.cipher_slcbox.setGeometry(QtCore.QRect(90, 70, 211, 31))
        self.cipher_slcbox.setObjectName("cipher_slcbox")
        self.line = QtWidgets.QFrame(self.enc_dec_grpbox)
        self.line.setGeometry(QtCore.QRect(10, 110, 361, 20))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.label = QtWidgets.QLabel(self.enc_dec_grpbox)
        self.label.setGeometry(QtCore.QRect(30, 130, 51, 31))
        self.label.setObjectName("label")
        self.key_txtbox = QtWidgets.QLineEdit(self.enc_dec_grpbox)
        self.key_txtbox.setGeometry(QtCore.QRect(20, 160, 341, 31))
        self.key_txtbox.setObjectName("key_txtbox")
        self.line_2 = QtWidgets.QFrame(self.enc_dec_grpbox)
        self.line_2.setGeometry(QtCore.QRect(10, 210, 361, 20))
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.enc_dec_btn = QtWidgets.QPushButton(self.enc_dec_grpbox)
        self.enc_dec_btn.setGeometry(QtCore.QRect(90, 240, 191, 41))
        self.enc_dec_btn.setObjectName("enc_dec_btn")
        self.decode_rdbtn.setChecked(True)
        for item in ["Vigenere","Ceaser","MD5","SHA1"]:
            self.cipher_slcbox.addItem(item)

        self.cipher_slcbox.currentIndexChanged.connect(self.cipher_slcbox_changed_event)

        self.decode_rdbtn.toggled.connect(self.decode_rdbtn_toggled_event)
        self.encode_rdbtn.toggled.connect(self.encode_rdbtn_toggled_event)

        self.enc_dec_btn.clicked.connect(self.enc_dec_btn_clicked_event)

        self.retranslateUi(encoder_decoder)
        QtCore.QMetaObject.connectSlotsByName(encoder_decoder)

    def retranslateUi(self, encoder_decoder):
        _translate = QtCore.QCoreApplication.translate
        encoder_decoder.setWindowTitle(_translate("encoder_decoder", "Simple Encoder / Decoder"))
        self.encode_rdbtn.setText(_translate("encoder_decoder", "      Encode"))
        self.decode_rdbtn.setText(_translate("encoder_decoder", "       Decode"))
        self.label.setText(_translate("encoder_decoder", "Key"))
        self.enc_dec_btn.setText(_translate("encoder_decoder", "Encode / Decode"))

    def decode_rdbtn_toggled_event(self):
        if(self.decode_rdbtn.isChecked()):
            self.flag = "dec"
    def encode_rdbtn_toggled_event(self):
        if(self.encode_rdbtn.isChecked()):
            self.flag = "enc"

    def enc_dec_btn_clicked_event(self):
        if(self.cipher_slcbox.currentText() == "Vigenere"):
            vig = Vigenere()
            plaintext = self.get_text_from_textarea(self.text_input_txtarea)
            key = self.get_text_from_textbox(self.key_txtbox)
            result = ""
            if(self.flag == "enc"):
                result = vig.safe_cipher(vig.decode26, key, plaintext)[1]
            else:
                result = vig.safe_cipher(vig.encode26, key, plaintext)[1]
            self.text_result_txtarea.setPlainText(str(result))

        elif(self.cipher_slcbox.currentText() == "Ceaser"):
            ces = Ceaser()
            plaintext = self.get_text_from_textarea(self.text_input_txtarea)
            key = self.get_text_from_textbox(self.key_txtbox)
            if(self.flag == "enc"):
                result = ces.encode(plaintext,int(key))
            else:
                result = ces.decode(plaintext,int(key))
            self.text_result_txtarea.setPlainText(result)
        elif(self.cipher_slcbox.currentText() == "MD5"):
            self.text_result_txtarea.setPlainText("Working on it,We'll entegrate it\n")
        elif(self.cipher_slcbox.currentText() == "SHA1"):
            self.text_result_txtarea.setPlainText("Working on it,We'll entegrate it\n")



    def get_text_from_textarea(self,textarea):
        return textarea.toPlainText()
    def get_text_from_textbox(self,textbox):
        return textbox.text()
    def cipher_slcbox_changed_event(self):
        if(self.cipher_slcbox.currentText() == "Ceaser"):
            self.label.setText("Rot")
        elif(self.cipher_slcbox.currentText() == "Vigenere"):
            self.label.setText("Key")

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    encoder_decoder = QtWidgets.QDialog()
    ui = Ui_encoder_decoder()
    ui.setupUi(encoder_decoder)
    encoder_decoder.show()
    sys.exit(app.exec_())

